generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String              @id @default(uuid())
  phone           String              @unique
  name            String?
  email           String?
  gender          String?
  role            String              @default("user")
  status          String              @default("pending")
  reputationScore Int                 @default(100)
  location        Json?
  birthDate       DateTime?
  notes           String?
  createdAt       DateTime            @default(now())
  updatedAt       DateTime?           @updatedAt
  alerts          Alert[]
  confirmations   AlertConfirmation[]
  notifications   Notification[]
  subscriptions   Subscription[]
}

model Alert {
  id                     String              @id @default(uuid())
  userId                 String?
  category               String
  severity               String?
  description            String?
  location               Json?
  mediaUrl               String?
  expiresAt              DateTime?
  status                 String              @default("active")
  createdAt              DateTime            @default(now())
  title                  String
  displayTitle           String
  ref_alert_id           String
  source                 String?
  categorySpecificFields Json?
  user                   User?               @relation(fields: [userId], references: [id])
  confirmedBy            AlertConfirmation[]
  notifications          Notification[]
}

model AlertConfirmation {
  id        Int      @id @default(autoincrement())
  userId    String
  alertId   String
  type      String
  createdAt DateTime @default(now())
  alert     Alert    @relation(fields: [alertId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, alertId])
}

model Subscription {
  id        Int      @id @default(autoincrement())
  userId    String
  type      String
  value     String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model Notification {
  id      String   @id @default(uuid())
  userId  String
  alertId String?
  title   String
  content String
  wasSeen Boolean  @default(false)
  sentAt  DateTime @default(now())
  alert   Alert?   @relation(fields: [alertId], references: [id])
  user    User     @relation(fields: [userId], references: [id])
}

model MessageBot {
  id                  Int      @id @default(autoincrement())
  platform            String
  senderPhone         String
  rawMessage          String
  interpretedCategory String?
  interpretedLocation String?
  interpretedSeverity String?
  alertCreated        Boolean  @default(false)
  createdAt           DateTime @default(now())
}
